#!/usr/bin/env bash

###
## MACOS BOOTSTRAP
## ---
## This script is intended to set up a clean install of macOS according to my
## own preferences.
## ---
## Reference: https://mths.be/macos
###


function _bootstrap_println {
    echo -e "\033[33m[BOOTSTRAP]\033[0m $1"
}

function _bootstrap_print {
    echo -e -n "\033[33m[BOOTSTRAP]\033[0m $1"
}

function _bootstrap_print_status {
    local STATUS=$?
    if [ $STATUS -eq 0 ]; then
        echo -e "\033[1;32mOK\033[0m"
    else
        echo -e "\033[1;31mFAIL\033[0m"
    fi
}


###
## Step 0: Greet the user
###

_bootstrap_println "Howdy! I'll get this Mac set up just the way you like it."


###
## Step 1: Gather required user input
###

# ask for the administrator password
_bootstrap_println  "The administrator password is required for some changes."
sudo -v
# keep sudo going until this script has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &


###
## Step 2: Set macOS preferences
###

# close system preference panes to prevent overriding changes
_bootstrap_print "Closing System Preferences panes to prevent overriding changes... "
osascript -e 'tell application "System Preferences" to quit'
_bootstrap_print_status

# ask the user for the computer name and default to the current computer name
_bootstrap_print "What would you like to name this computer? ($(sudo scutil --get ComputerName)) "
read -e -t 30
if [[ -z $REPLY ]]; then
    _bootstrap_println "Keeping the current name."
else
    _bootstrap_print "Updating the computer name to $REPLY... "
    sudo scutil --set ComputerName $REPLY
    _bootstrap_print_status
    _bootstrap_print "Updating the hostname to $REPLY... "
    sudo scutil --set HostName $REPLY
    _bootstrap_print_status
    _bootstrap_print "Updating the local hostname to $REPLY... "
    sudo scutil --set LocalHostName $REPLY
    _bootstrap_print_status
    _bootstrap_print "Updating the NetBIOSName to $REPLY... "
    sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "$REPLY"
    _bootstrap_print_status
fi

# LOW-LEVEL
# disable sound effects on boot
_bootstrap_print "Disabling boot sound... "
sudo nvram SystemAudioVolume=" "
_bootstrap_print_status

# GENERAL UI/UX
# set highlight color
#defaults write NSGlobalDomain AppleHighlightColor -string "0.764700 0.976500 0.568600"
# show scrollbars when scrolling
_bootstrap_print "Setting scrollbars to show when scrolling... "
defaults write NSGlobalDomain AppleShowScrollBars -string "WhenScrolling"
_bootstrap_print_status
# set sidebar icon size to medium
_bootstrap_print "Setting sidebar icon size to medium... "
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2
_bootstrap_print_status
# set standby delay to 24 hours
_bootstrap_print "Setting standby delay to 24 hours... "
sudo pmset -a standbydelay 86400
_bootstrap_print_status
# don't keep windows on application quit
# _bootstrap_print "Disabling application resume on quit... "
# defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false
# _bootstrap_print_status
# save to disk rather than iCloud by default
_bootstrap_print "Setting default document save location to disk instead of iCloud... "
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
_bootstrap_print_status
# expand save-file sheets by default
_bootstrap_print "Setting save-file dialog sheet to expand automatically [1/2]... "
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
_bootstrap_print_status
_bootstrap_print "Setting save-file dialog sheet to expand automatically [2/2]... "
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
_bootstrap_print_status
# expand print sheets by default
_bootstrap_print "Setting print dialog sheet to expand automatically [1/2]... "
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
_bootstrap_print_status
_bootstrap_print "Setting print dialog sheet to expand automatically [2/2]... "
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
_bootstrap_print_status
# quit printer app when print jobs complete
_bootstrap_print "Setting printer app to quit when print jobs are complete... "
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
_bootstrap_print_status
# remove duplicates from "open with" menu
_bootstrap_print "Removing \"Open With\" menu duplicates... "
/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
_bootstrap_print_status
# disable hibernation to speed up sleep mode
_bootstrap_print "Disabling hibernation... "
sudo pmset -a hibernatemode 0
_bootstrap_print_status
# remove sleep image file to save disk space
_bootstrap_print "Removing sleep image file [1/3]... "
sudo rm /private/var/vm/sleepimage
_bootstrap_print_status
_bootstrap_print "Removing sleep image file [2/3]... "
sudo touch /private/var/vm/sleepimage
_bootstrap_print_status
_bootstrap_print "Removing sleep image file [3/3]... "
sudo chflags uchg /private/var/vm/sleepimage
_bootstrap_print_status
# set screenshot format to PNG
_bootstrap_print "Setting screenshot format to PNG... "
defaults write com.apple.screencapture type -string "png"
_bootstrap_print_status
# disable screenshot shadow
_bootstrap_print "Disabling screenshot shadows... "
defaults write com.apple.screencapture disable-shadow -bool true
_bootstrap_print_status
# set screenshot save location
_bootstrap_print "Setting screenshot save location to ~/Desktop... "
defaults write com.apple.screencapture location -string "$HOME/Desktop"
_bootstrap_print_status
# disable dashboard
_bootstrap_print "Disabling dashboard... "
defaults write com.apple.dashboard mcx-disabled -bool true
_bootstrap_print_status
# hide dashboard as a space
_bootstrap_print "Hiding dashboard as a space... "
defaults write com.apple.dock dashboard-in-overlay -bool true
_bootstrap_print_status
# disable automatic rearrangement of spaces based on most recent use
_bootstrap_print "Disabling automatic most recently used rearrangement of spaces... "
defaults write com.apple.dock mru-spaces -bool false
_bootstrap_print_status
# disable launchpad gesture (pinch with thumb and three fingers)
_bootstrap_print "Disabling Launchpad gesture... "
defaults write com.apple.dock showLaunchpadGestureEnabled -int 0
_bootstrap_print_status
# reset launchpad
_bootstrap_print "Resetting Launchpad... "
find "$HOME/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete
_bootstrap_print_status
# set hot corners
_bootstrap_print "Set bottom-left hot corner to put the display to sleep [1/2]... "
defaults write com.apple.dock wvous-bl-corner -int 10
_bootstrap_print_status
_bootstrap_print "Set bottom-left hot corner to put the display to sleep [2/2]... "
defaults write com.apple.dock wvous-bl-modifier -int 0
_bootstrap_print_status

# SECURITY
# disable confirmation dialog for downloaded apps
_bootstrap_print "Disabling app quarantine confirmation dialog for downloaded applications... "
defaults write com.apple.LaunchServices LSQuarantine -bool false
_bootstrap_print_status
# require password immediately after sleep or screen saver
_bootstrap_print "Enabling ask for password immediately after sleep or screen saver [1/2]... "
defaults write com.apple.screensaver askForPassword -int 1
_bootstrap_print_status
_bootstrap_print "Enabling ask for password immediately after sleep or screen saver [2/2]... "
defaults write com.apple.screensaver askForPasswordDelay -int 0
_bootstrap_print_status

# TRACKPAD
# disable natural scroll
# _bootstrap_print "Disabling natural scroll... "
# defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false
# _bootstrap_print_status
# enable tap to click
_bootstrap_print "Enabling tap to click [1/4]... "
defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
_bootstrap_print_status
_bootstrap_print "Enabling tap to click [2/4]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
_bootstrap_print_status
_bootstrap_print "Enabling tap to click [3/4]... "
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
_bootstrap_print_status
_bootstrap_print "Enabling tap to click [4/4]... "
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
_bootstrap_print_status
# enable three-finger drag
_bootstrap_print "Enabling three-finger drag [1/6]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerDrag -bool true
_bootstrap_print_status
_bootstrap_print "Enabling three-finger drag [2/6]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerHorizSwipeGesture -bool false
_bootstrap_print_status
_bootstrap_print "Enabling three-finger drag [3/6]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerVertSwipeGesture -bool false
_bootstrap_print_status
_bootstrap_print "Enabling three-finger drag [4/6]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerDrag -bool true
_bootstrap_print_status
_bootstrap_print "Enabling three-finger drag [5/6]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -bool false
_bootstrap_print_status
_bootstrap_print "Enabling three-finger drag [6/6]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -bool false
_bootstrap_print_status
# disable lookup gesture (tap with three fingers)
_bootstrap_print "Disabling Lookup gesture [1/2]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerTapGesture -bool false
_bootstrap_print_status
_bootstrap_print "Disabling Lookup gesture [2/2]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerTapGesture -bool false
_bootstrap_print_status
# disable smart zoom (double-tap with two fingers)
_bootstrap_print "Disabling smart zoom gesture [1/2]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadTwoFingerDoubleTapGesture -bool false
_bootstrap_print_status
_bootstrap_print "Disabling smart zoom gesture [2/2]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerDoubleTapGesture -bool false
_bootstrap_print_status
# disable notification center gesture
_bootstrap_print "Disabling notification center gesture [1/2]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -bool false
_bootstrap_print_status
_bootstrap_print "Disabling notification center gesture [2/2]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -bool false
_bootstrap_print_status
# disable show desktop gesture
_bootstrap_print "Disabling show desktop gesture [1/5]... "
defaults write com.apple.dock showDesktopGestureEnabled -bool false
_bootstrap_print_status
_bootstrap_print "Disabling show desktop gesture [2/5]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadFiveFingerPinchGesture -bool false
_bootstrap_print_status
_bootstrap_print "Disabling show desktop gesture [3/5]... "
defaults write com.apple.AppleMultitouchTrackpad TrackpadFourFingerPinchGesture -bool false
_bootstrap_print_status
_bootstrap_print "Disabling show desktop gesture [4/5]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFiveFingerPinchGesture -bool false
_bootstrap_print_status
_bootstrap_print "Disabling show desktop gesture [5/5]... "
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadFourFingerPinchGesture -bool false
_bootstrap_print_status

# KEYBOARD
# enable full keyboard access for system controls
_bootstrap_print "Enabling keyboard access for system controls... "
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
_bootstrap_print_status
# disable press-and-hold in favor of key repeat
_bootstrap_print "Disabling press-and-hold in favor of key repeat... "
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
_bootstrap_print_status
# set fast key repeat and low repeat delay
_bootstrap_print "Setting key repeat to fastest speed... "
defaults write NSGlobalDomain KeyRepeat -int 1
_bootstrap_print_status
_bootstrap_print "Setting key repeat to a short duration... "
defaults write NSGlobalDomain InitialKeyRepeat -int 10
_bootstrap_print_status
# disable automatic capitalization
# _bootstrap_print "Disabling automatic capitalization... "
# defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false
# _bootstrap_print_status
# disable smart dashes
_bootstrap_print "Disabling automatic dash substitution... "
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
_bootstrap_print_status
# disable period substitution
_bootstrap_print "Disabling automatic period substitution... "
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false
_bootstrap_print_status
# disable quote substitution
_bootstrap_print "Disabling automatic quote substitution... "
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
_bootstrap_print_status
# disable spelling correction
_bootstrap_print "Disabling automatic spelling correction... "
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
_bootstrap_print_status

# AUDIO
# increase sound quality for bluetooth headphones
_bootstrap_print "Increasing sound quality for Bluetooth audio devices... "
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
_bootstrap_print_status

# STATUS BAR
# set status bar icons

# DOCK
# remove all pinned applications from dock
# _bootstrap_print "Removing all pinned applications from the dock... "
# defaults write com.apple.dock persistent-apps -array
# _bootstrap_print_status
# hide recent applications
_bootstrap_print "Removing recent applications from the dock... "
defaults write com.apple.dock show-recents -bool false
_bootstrap_print_status
# show only open applications in the dock
# _bootstrap_print "Showing only open applications in the dock... "
# defaults write com.apple.dock static-only -bool true
_bootstrap_print_status
# set dock icon size to 36 pixels
_bootstrap_print "Setting dock icon size to 48px... "
defaults write com.apple.dock tilesize -int 48
_bootstrap_print_status
# auto-hide dock
# _bootstrap_print "Enabling dock auto-hide... "
# defaults write com.apple.dock autohide -bool true
# _bootstrap_print_status

# FINDER
# set user directory as default location for new finder windows
_bootstrap_print "Setting Finder default location to home directory [1/2]... "
defaults write com.apple.finder NewWindowTarget -string "PfLo"
_bootstrap_print_status
_bootstrap_print "Setting Finder default location to home directory [2/2]... "
defaults write com.apple.finder NewWindowTargetPath -string "file://$HOME"
_bootstrap_print_status
# set default finder view to list view (options: "Nlsv", "icnv", "clmv", "Flwv")
# _bootstrap_print "Setting Finder default view to list... "
# defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
# _bootstrap_print_status
# show filename extensions
_bootstrap_print "Showing filename extensions in Finder... "
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
_bootstrap_print_status
# disable change filename extension confirmation dialog
_bootstrap_print "Disabling confirmation dialog when changing filename extensions in Finder... "
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
_bootstrap_print_status
# show the path bar
_bootstrap_print "Showing path bar in Finder... "
defaults write com.apple.finder ShowPathBar -bool true
_bootstrap_print_status
# keep folders on top when sorting by name
_bootstrap_print "Sorting folders first in Finder... "
defaults write com.apple.finder _FXSortFoldersFirst -bool true
_bootstrap_print_status
# disable .DS_Store creation for external storage devices
_bootstrap_print "Disabling .DS_Store creation for external storage devices [1/2]... "
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
_bootstrap_print_status
_bootstrap_print "Disabling .DS_Store creation for external storage devices [2/2]... "
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
_bootstrap_print_status
# hide desktop icons for storage devices
# _bootstrap_print "Disabling Desktop icons for storage devices [1/4]... "
# defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
# _bootstrap_print_status
# _bootstrap_print "Disabling Desktop icons for storage devices [2/4]... "
# defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
# _bootstrap_print_status
# _bootstrap_print "Disabling Desktop icons for storage devices [3/4]... "
# defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
# _bootstrap_print_status
# _bootstrap_print "Disabling Desktop icons for storage devices [4/4]... "
# defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
# _bootstrap_print_status
# hide all desktop icons
# _bootstrap_print "Disabling all Desktop icons... "
# defaults write com.apple.finder CreateDesktop -bool false
# _bootstrap_print_status
# disable empty trash confirmation dialog
_bootstrap_print "Disabling confirmation dialog when emptying trash... "
defaults write com.apple.finder WarnOnEmptyTrash -bool false
_bootstrap_print_status
# show the ~/Library directory
_bootstrap_print "Showing the ~/Library directory... "
chflags nohidden ~/Library
_bootstrap_print_status

# SPOTLIGHT
# change indexing order and disable some search results
_bootstrap_print "Changing Spotlight indexing order and disabling some search results [1/4]... "
defaults write com.apple.spotlight orderedItems -array \
    '{"enabled" = 1;"name" = "APPLICATIONS";}' \
    '{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
    '{"enabled" = 1;"name" = "MENU_DEFINITION";}' \
    '{"enabled" = 1;"name" = "MENU_CONVERSION";}' \
    '{"enabled" = 1;"name" = "MENU_EXPRESSION";}' \
    '{"enabled" = 1;"name" = "DIRECTORIES";}' \
    '{"enabled" = 1;"name" = "DOCUMENTS";}' \
    '{"enabled" = 1;"name" = "IMAGES";}' \
    '{"enabled" = 1;"name" = "MOVIES";}' \
    '{"enabled" = 1;"name" = "MUSIC";}' \
    '{"enabled" = 1;"name" = "PDF";}' \
    '{"enabled" = 1;"name" = "SPREADSHEETS";}' \
    '{"enabled" = 1;"name" = "PRESENTATIONS";}' \
    '{"enabled" = 1;"name" = "FONTS";}' \
    '{"enabled" = 0;"name" = "BOOKMARKS";}' \
    '{"enabled" = 0;"name" = "CONTACT";}' \
    '{"enabled" = 0;"name" = "EVENT_TODO";}' \
    '{"enabled" = 0;"name" = "MENU_OTHER";}' \
    '{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}' \
    '{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
    '{"enabled" = 0;"name" = "MESSAGES";}' \
    '{"enabled" = 0;"name" = "SOURCE";}'
_bootstrap_print_status
# load new settings before rebuilding the index
_bootstrap_print "Changing Spotlight indexing order and disabling some search results [2/4]... "
killall mds > /dev/null 2>&1
_bootstrap_print_status
# make sure indexing is enabled for the main volume
_bootstrap_print "Changing Spotlight indexing order and disabling some search results [3/4]... "
sudo mdutil -i on / > /dev/null
_bootstrap_print_status
# rebuild the index from scratch
_bootstrap_print "Changing Spotlight indexing order and disabling some search results [4/4]... "
sudo mdutil -E / > /dev/null
_bootstrap_print_status

# ACTIVITY MONITOR
# show the main window when launching activity monitor
_bootstrap_print "Setting Activity Monitor to show main window when launched... "
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true
_bootstrap_print_status
# show CPU usage in activity monitor dock icon
_bootstrap_print "Setting Activity Monitor to show CPU usage in dock icon... "
defaults write com.apple.ActivityMonitor IconType -int 5
_bootstrap_print_status
# show all processes in activity monitor
_bootstrap_print "Setting Activity Monitor to show all processes... "
defaults write com.apple.ActivityMonitor ShowCategory -int 0
_bootstrap_print_status
# sort activity monitor results by CPU usage
_bootstrap_print "Setting Activity Monitor to sort results by CPU usage [1/2]... "
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
_bootstrap_print_status
_bootstrap_print "Setting Activity Monitor to sort results by CPU usage [2/2]... "
defaults write com.apple.ActivityMonitor SortDirection -int 0
_bootstrap_print_status

# MAC APP STORE
# enable automatic update check
_bootstrap_print "Enabling automatic update check... "
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true
_bootstrap_print_status
# check for software updates daily, not weekly
_bootstrap_print "Setting software update check schedule to daily... "
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
_bootstrap_print_status
# download newly available updates in background
_bootstrap_print "Setting software updates to download in the background... "
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1
_bootstrap_print_status
# install system data files and security updates
_bootstrap_print "Setting critical software updates to install automatically... "
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1
_bootstrap_print_status
# enable automatic update installation
_bootstrap_print "Setting normal software updates to install automatically... "
defaults write com.apple.commerce AutoUpdate -bool true
_bootstrap_print_status

##
## Step 3: Homebrew
##

# test if user has homebrew available
if ! hash brew 2>/dev/null; then
    _bootstrap_print "Install Homebrew? (Y/n) "
    read -e -n 1 -t 30
    # ask user if they want to install homebrew
    if [[ $REPLY == [Yy]* ]] || [[ -z $REPLY ]]; then
        # install homebrew
        _bootstrap_print "Installing Homebrew... "
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        _bootstrap_print_status
        # ask user if they want to install applications via homebrew
        _bootstrap_print "Install/Update applications via Homebrew? (Y/n) "
        read -e -t 30
        if [[ $REPLY == [Yy]* ]] || [[ -z $REPLY ]]; then
            _bootstrap_print "Installing/Updating applications via Homebrew... "
            brew bundle --file=./brew/.Brewfile
            _bootstrap_print_status
        else
            _bootstrap_println "Skipped."
        fi
    else
        _bootstrap_println "Skipped."
    fi
else
    # ask user if they want to install applications via homebrew
    _bootstrap_print "Install/Update applications via Homebrew? (Y/n) "
    read -e -n 1 -t 30
    if [[ $REPLY == [Yy]* ]] || [[ -z $REPLY ]]; then
        _bootstrap_print "Installing/Updating applications via Homebrew... "
        brew bundle --file=./brew/.Brewfile
        _bootstrap_print_status
    else
        _bootstrap_println "Skipped."
    fi
fi

# add zsh to /etc/shells
_bootstrap_print "Adding zsh to /etc/shells... "
grep -qx "$(which zsh)" /etc/shells || sudo sh -c "echo $(which zsh) >> /etc/shells"
_bootstrap_print_status
# change login shell
_bootstrap_println "Setting login shell to zsh... "
chsh -s $(which zsh)
_bootstrap_print_status


###
## Step 4: Finish
###

for app in \
"Activity Monitor" \
"cfprefsd" \
"Dock" \
"Finder" \
"SystemUIServer"; do
    killall "${app}" &>/dev/null
done

_bootstrap_println "\033[1mAll done! Some changes may require a reboot to take effect.\033[0m"
